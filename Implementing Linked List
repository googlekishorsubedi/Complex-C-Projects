#include <iostream>
using namespace std;

struct node
{
  int data;
  node* next;
};

typedef node* nodeptr;

nodeptr head;
nodeptr curr;
nodeptr temp;

void addfunction(int x);
void display_function();
void delete_function(int deldata);
void add_index(int,int);

int main()
{
  head = new node;
  head -> data = 1;
  curr = head;
  addfunction(2);
  addfunction(3);
  
  display_function();
  delete_function(2);
  display_function();
  
  add_index(500, 2);
  return 0;
}

void addfunction(int x)
{
  temp = new node;
  temp -> data = x;
  curr -> next = temp;
  curr = curr -> next;
  curr -> next = NULL ;
}

void display_function()
{
  curr = head;
  while(curr -> next != NULL)
  {
    cout<< curr -> data << endl;
    curr = curr -> next;
  }
  cout<< curr -> data << endl;
}

void delete_function(int deldata)
{
  nodeptr delptr;
  curr = head;
  while (curr -> data != deldata && curr != NULL)
  {
    temp = curr;
    curr = curr -> next;
  }
  if (curr == NULL)
  {
    cout<< "NOT FOUND" << endl;
  }
  else
  { 
    delptr = curr;
    curr = curr -> next;
    temp -> next = curr;
    delete delptr;
  }
}

void add_index(int number, int index)
{
  curr = head ;
  
  for (int i = 1; i < index; i++)
  {
    curr = curr -> next;
  }
  
  nodeptr next_node = curr -> next;
  
  temp = new node;
  temp -> data = number;
  curr -> next = temp;
  temp -> next = next_node;
  
}



