#include <iostream>
#include <fstream>
#include <string>
using namespace std;
  
class hashclass
{
  private:
    static const int tablesize = 10 ;
    
    struct item 
    {
      string name ;
      string drink ;
      item* next ;
    };
    
    item* hashtable[tablesize]; //table of size 10 with item pointers as data members
  
  public:
    hashclass() ;
    int hashfunction(string) ;
    void additem(string, string) ;
    int numberofitemsinindex(int) ;
    void printfunction();
};

hashclass:: hashclass()
{
  for(int i=0; i< tablesize ; i++)
  {
    hashtable[i] = new item ;
    hashtable[i] -> name = "empty" ;
    hashtable[i] -> drink = "empty" ;
    hashtable[i] -> next = NULL ;
  }
}

int hashclass:: hashfunction(string key) //returns index for a key to be stored in table
{
  int hash ;
  int index ;
  
  for(int i =0; i< key.length(); i++)
  {
    hash += (int) key[i] ;
  }
  
  index = hash % tablesize ;
  return index ;
}

void hashclass:: additem(string name, string drink)
{
  int index = hashfunction(name) ;
  
  if (hashtable[index] -> name == "empty") //means there is no members in that index
  {
    hashtable[index] -> name = name ;
    hashtable[index] -> drink = drink ;
  }
  
  else //Collison case
  {
    item* ptr = hashtable[index] ;
    item* n = new item ;
    n-> name = "name" ;
    n -> drink = drink ;
    n -> next = NULL ;
    
    while(ptr -> next != NULL) //Traversing through the linkedlists
    {
      ptr = ptr -> next ;
    }
    ptr -> next = n ;
  }
}

int hashclass :: numberofitemsinindex(int index)
{
  int count = 0;
  if(hashtable[index] -> name == "empty")
    return count ;
  else
  {
    count ++ ; 
    item* pointer = hashtable[index] ;
    while(pointer -> next != NULL)
    {
      count += 1 ;
      pointer = pointer -> next ;
    }
  }
  return count;
}

void hashclass:: printfunction()
{
 for(int i = 0 ; i< tablesize; i++)
  {
    int number = numberofitemsinindex(i) ;
    
    if(number == 0)
      cout << "The index is empty" << endl ;
      
    else 
    {
      item* ptr = hashtable[i];
      while(ptr != NULL)
      {
        cout << "--------------------" << endl;
        cout << ptr -> name << endl;
        cout << ptr -> drink << endl;
        cout << "-------------------" << endl << endl; 
        ptr = ptr -> next ;
      }
    }
  cout << endl << endl << endl ;
  }
}

int main()
{
  hashclass dict ;
  dict.additem("Kishor", "Sprite") ;
  dict.additem("Binaya", "Coke") ;
  dict.additem("Sudarshan", "Cock");
  dict.additem("Sushan", "Fanta");
  dict.additem("Henching", "Water");
  dict.additem("Bijesh", "Yoghurt");
  dict.additem("Nimesh", "Cock");
  dict.additem("Anurag", "Pussy");
  dict.additem("Sudheesh", "Tika");
  
  dict.printfunction() ;
  return 0;
}










